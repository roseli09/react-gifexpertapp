{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,0BAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAEhBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMtB,2BACIO,KAAO,OACPC,MAAOT,EACPU,SAnBa,SAAEP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAQf,EAAMgB,IAAON,IAC1B,2BAAIA,KCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACFwB,MAAK,SAAAC,GAECH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAIzB,CAACpB,IAEGqB,EDfwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAGHH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEnBnBkB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,iBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAO3B,EACPA,SAAWA,U,MCfvC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.61b6d517.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputValue = ( e ) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n                    // console.log('submit hecho')\n                    setCategories(cats => [ inputValue, ...cats,]);\n                    setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <input \n                type = \"text\"\n                value={inputValue}\n                onChange={handleInputValue}\n            />\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Es6V8tOPrKN6ibkzvqCWSqFKFW4swhzC`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n    \n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src = { url } alt = {title}/>\n            <p>{title}</p>\n        </div>\n    )\n} \n","\nimport React from 'react'\nimport { useFetchGift } from '../hooks/useFetchGifs';\n\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGift( category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\">loading...</p>}\n     \n        <div className=\"card-grid\">\n            \n                {\n                    images.map(img => (\n                        <GifGridItem \n                            key = {img.id}\n                            {...img}\n                        />\n                    ))\n                } \n            \n        </div>\n        </>\n    )\n}\n","import {useState} from 'react';\nimport { useEffect } from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGift = (category) =>{\n    \n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n             .then(imgs=>{\n\n                    setState({\n                       data: imgs,\n                       loading: false\n                    });\n\n             })\n    }, [category])\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['lonney tunes']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category =>(\n                        <GifGrid \n                            key = {category}\n                            category ={category}     \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}